name: logsmith Install

on:
  workflow_call:
    inputs:
      packages:
        description: Packages to install (space-separated list)
        required: false
        type: string
        default: ''
      config-path:
        description: Path to logsmith config file
        required: false
        type: string
        default: logsmith.config.ts
      use-dev:
        description: Whether to install the dev package
        required: false
        type: boolean
        default: false

jobs:
  install:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install logsmith
        run: bun install -g logsmith

      - name: Install pkgx
        run: logsmith pkgx --verbose

      - name: Install dev package (if required)
        if: ${{ inputs.use-dev }}
        run: logsmith dev --verbose
        env:
          logsmith_VERBOSE: true
          CONTEXT: ${{ github.context }}

      - name: Install dependencies from config (Unix)
        if: ${{ inputs.packages == '' && runner.os != 'Windows' }}
        run: |
          if [ -f "${{ inputs.config-path }}" ]; then
            PACKAGES=$(grep -o '"[^"]*"' "${{ inputs.config-path }}" | tr -d '"' | tr '\n' ' ')
            if [ ! -z "$PACKAGES" ]; then
              logsmith install --verbose $PACKAGES
            fi
          fi
        shell: bash
        env:
          logsmith_VERBOSE: true
          CONTEXT: ${{ github.context }}

      - name: Install dependencies from config (Windows)
        if: ${{ inputs.packages == '' && runner.os == 'Windows' }}
        run: |
          if (Test-Path "${{ inputs.config-path }}") {
            $content = Get-Content "${{ inputs.config-path }}" -Raw
            $packages = [regex]::Matches($content, '"([^"]*)"') | ForEach-Object { $_.Groups[1].Value }
            if ($packages) {
              logsmith install --verbose $packages
            }
          }
        shell: pwsh
        env:
          logsmith_VERBOSE: true
          CONTEXT: ${{ github.context }}

      - name: Install specified dependencies
        if: ${{ inputs.packages != '' }}
        run: logsmith install --verbose ${{ inputs.packages }}
        env:
          logsmith_VERBOSE: true
          CONTEXT: ${{ github.context }}
