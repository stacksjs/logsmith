name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: Release type
        required: true
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
      preid:
        description: Prerelease identifier (for prerelease types)
        required: false
        type: string
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - package.json

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build
        run: bun run build

      - name: Run tests
        run: bun test

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Release (Manual)
        if: github.event_name == 'workflow_dispatch'
        run: |
          if [ -n "${{ github.event.inputs.preid }}" ]; then
            bunx bumpx ${{ github.event.inputs.release_type }} --preid ${{ github.event.inputs.preid }} --yes
          else
            bunx bumpx ${{ github.event.inputs.release_type }} --yes
          fi

      - name: Release (Auto Patch)
        if: github.event_name == 'push'
        run: bunx bumpx patch --yes

      - name: Create GitHub Release
        if: always() && steps.release.conclusion == 'success'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: ${{ contains(github.event.inputs.release_type, 'pre') }}

      - name: Publish to NPM
        if: always() && steps.release.conclusion == 'success'
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
